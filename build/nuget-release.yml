name: $(Package.Version)

trigger: none
pr: none

resources:
  repositories:
    - repository: templates
      type: github
      name: arcus-azure/azure-devops-templates
      endpoint: arcus-azure

variables:
  - group: 'Arcus Observability - .NET'
  - group: 'Build Configuration'
  - name: 'Repository'
    value: 'arcus-azure/arcus.observability'
  # 'Package.Version' is added as queue-time variable on build in Azure DevOps

stages:
  - stage: Build
    jobs:
      - job: Compile
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - template: build/build-solution.yml@templates
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              version: $(Build.BuildNumber)
          - task: CopyFiles@2
            displayName: 'Copy build artifacts'
            inputs:
              contents: '**/?(bin|obj)/**'
              targetFolder: '$(Pipeline.Workspace)/build'
          - task: PublishPipelineArtifact@0
            displayName: 'Publish build artifacts'
            inputs:
              targetPath: '$(Pipeline.Workspace)/build'
              artifactName: Build

  - stage: UnitTests
    displayName: Unit Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: UnitTests
        displayName: 'Run unit tests'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - template: test/run-unit-tests.yml@templates
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              projectName: '$(Project).Tests.Unit'

  - stage: IntegrationTests
    displayName: Integration Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: IntegrationTests
        displayName: 'Run integration tests'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - template: test/run-integration-tests.yml@templates
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              projectName: '$(Project).Tests.Integration'

  - stage: Release
    displayName: 'Release to NuGet.org'
    dependsOn: IntegrationTests
    condition: succeeded()
    jobs:
      - job: PushToNuGet
        displayName: 'Push to NuGet.org'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - ${{ if not(contains(variables['Build.BuildNumber'], '-')) }}:
              - template: github/create-release.yml@templates
                parameters:
                  repositoryName: '$(Repository)'
                  releaseNotes: |
                    Install new version via [NuGet](https://www.nuget.org/packages/$(Project).Correlation/$(Build.BuildNumber))
                    ```shell
                    PM > Install-Package $(Project).Correlation --Version $(Build.BuildNumber)
                    ```
          - ${{ if contains(variables['Build.BuildNumber'], '-') }}:
              - template: create-pre-release.yml@templates
                parameters:
                  repositoryName: '$(Repository)'
                  releaseNotes: |
                    Install new version via [NuGet](https://www.nuget.org/packages/$(Project).Correlation/$(Build.BuildNumber))
                    ```shell
                    PM > Install-Package $(Project).Correlation --Version $(Build.BuildNumber)
                    ```
          - template: nuget/publish-official-package.yml@templates
