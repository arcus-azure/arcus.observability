parameters:
  azureServiceConnection: ''

steps:
  - task: AzureCLI@2
    displayName: 'Import secrets from Azure Key Vault'
    inputs:
      azureSubscription: '${{ parameters.azureServiceConnection }}'
      addSpnToEnvironment: true
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
        Install-Module -Name Arcus.Scripting.DevOps -AllowClobber

        Set-AzDevOpsVariable -Name 'Arcus.Observability.TenantId' -Value $env:tenantId
        Set-AzDevOpsVariable -Name 'Arcus.Observability.ServicePrincipal.ClientId' -Value $env:servicePrincipalId
        Set-AzDevOpsVariable -Name 'Arcus.Observability.ServicePrincipal.ClientSecret' -Value $env:servicePrincipalKey

        $keyVaultName = $env:ARCUS_KEYVAULT_NAME
        Write-Host "Importing secrets from Key Vault: $keyVaultName"

        $instrumentationKey_secretName = $env:ARCUS_OBSERVABILITY_APPLICATIONINSIGHTS_INSTRUMENTATIONKEY_SECRETNAME
        Write-Host "Importing secret: $instrumentationKey_secretName"
        $instrumentationKeySecret = az keyvault secret show --name "$instrumentationKey_secretName" --vault-name "$keyVaultName" | ConvertFrom-Json
        Set-AzDevOpsVariable -AsSecret -Name 'Arcus.Observability.ApplicationInsights.InstrumentationKey' -Value $instrumentationKeySecret.value

        $resourceId_secretName = $env:ARCUS_OBSERVABILITY_LOGANALYTICSWORKSPACE_RESOURCEID_SECRETNAME
        Write-Host "Importing secret: $resourceId_secretName"
        $resourceIdSecret = az keyvault secret show --name "$resourceId_secretName" --vault-name "$keyVaultName" | ConvertFrom-Json
        Set-AzDevOpsVariable -AsSecret -Name 'Arcus.Observability.LogAnalyticsWorkspace.ResourceId' -Value $resourceIdSecret.value