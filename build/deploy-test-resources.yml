name: Deploy test resources

trigger: none
pr: none

parameters:
  - name: azureServiceConnection
    displayName: 'Azure service connection'
    type: string
  - name: resourceGroupName
    displayName: 'Resource group name'
    default: 'codit-arcus-observability-rg'
  - name: appInsightsName
    displayName: 'Application Insights name'
    default: 'arcus-observability-dev-we-app-insights'
  - name: variableGroupName
    displayName: 'Variable group name'
    default: 'Arcus Observability - Integration Testing'

variables:
  - template: ./variables/build.yml

stages:
  - stage: Deploy
    jobs:
      - job: DeployBicep
        displayName: 'Deploy test resources'
        pool:
          vmImage: '$(Vm.Image)'
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: '${{ parameters.azureServiceConnection }}'
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
                Install-Module -Name Arcus.Scripting.DevOps -AllowClobber
                Install-Module Az.ApplicationInsights
                Import-Module Az.ApplicationInsights

                $parameters = @{
                  "location" = "westeurope"
                  "appInsightsName" = "${{ parameters.appInsightsName }" } | ConvertTo-Json
                $appInsightsOutput = az deployment sub create `
                  --location westeurope `
                  --template-file ./build/templates/deploy-test-resources.bicep `
                  --parameters $parameters `
                  | ConvertFrom-Json

                $context = az account show | ConvertFrom-Json
                $securePassword = ConvertTo-SecureString $context.user.password -AsPlainText -Force
                $credential = New-Object System.Management.Automation.PSCredential ($context.user.name, $securePassword)
                Connect-AzAccount -ServicePrincipal -Credential $credential -Tenant $context.tenantId

                $apiKeyOutput = New-AzApplicationInsightsApiKey -ResourceGroupName ${{ parameters.resourceGroupName }} -Name ${{ parameters.appInsightsName }} -Description 'Asserting tracked telemetry' -Permissions @('ReadTelemetry')
                $appInsightsOutput.properties.outputs | Add-Member -Type NoteProperty -Name 'ApplicationInsights_ApiKey' -Value $apiKeyOutput.ApiKey

                $env:ArmOutputs = $appInsightsOutput
                Set-AzDevOpsArmOutputsToVariableGroup -VariableGroupName ${{ parameters.variableGroupName }}