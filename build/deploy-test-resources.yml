name: Arcus Observability - Deploy test resources

trigger: none
pr: none

parameters:
  - name: azureServiceConnection
    displayName: 'Azure service connection'
    type: string
    default: 'Azure Codit-Arcus Service Principal'
  - name: resourceGroupName
    displayName: 'Resource group name'
    default: arcus-observability-dev-we-rg
  - name: variableGroupName
    displayName: 'Variable group name'
    default: Arcus Observability - Integration Testing

variables:
  - template: ./variables/build.yml
  - template: ./variables/test.yml

stages:
  - stage: Deploy
    jobs:
      - job: DeployBicep
        displayName: 'Deploy test resources'
        pool:
          vmImage: '$(Vm.Image)'
        steps:
          - task: AzureCLI@2
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
            inputs:
              azureSubscription: '${{ parameters.azureServiceConnection }}'
              addSpnToEnvironment: true
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
                Install-Module -Name Arcus.Scripting.DevOps -AllowClobber
                az extension add --name application-insights

                $objectId = (az ad sp show --id $env:servicePrincipalId | ConvertFrom-Json).id
                $appInsightsOutput = az deployment sub create `
                  --location westeurope `
                  --template-file ./build/templates/deploy-test-resources.bicep `
                  --parameters location=westeurope `
                  --parameters resourceGroupName=${{ parameters.resourceGroupName }} `
                  --parameters appInsightsName=${{ variables['ApplicationInsights.Name'] }} `
                  --parameters instrumentationKey_secretName=${{ variables.ApplicationInsights.InstrumentationKeySecretName }} `
                  --parameters keyVaultName=${{ variables['KeyVault.Name'] }} `
                  --parameters servicePrincipal_objectId=$objectId `
                  | ConvertFrom-Json

                $apiKeyName = 'Arcus Observability Integration Tests API Key'
                if (az monitor app-insights api-key show `
                      --app ${{ variables['ApplicationInsights.Name'] }} `
                      --resource-group ${{ parameters.resourceGroupName }} `
                      --api-key $apiKeyName) {
                  az monitor app-insights api-key delete `
                  --api-key $apiKeyName `
                  --app ${{ variables['ApplicationInsights.Name'] }} `
                  --resource-group ${{ parameters.resourceGroupName }} `
                  --yes
                }

                $apiKeyOutput = az monitor app-insights api-key create `
                  --api-key $apiKeyName `
                  --app ${{ variables['ApplicationInsights.Name'] }} `
                  --resource-group ${{ parameters.resourceGroupName }} `
                  --read-properties ReadTelemetry `
                  | ConvertFrom-Json
                
                az keyvault secret set `
                  --vault-name ${{ variables['KeyVault.Name'] }} `
                  --name ${{ variables['ApplicationInsights.ApiKeySecretName'] }} `
                  --value $apiKeyOutput.apiKey `

                $env:ArmOutputs = ConvertTo-Json $appInsightsOutput.properties.outputs
                Set-AzDevOpsArmOutputsToVariableGroup -VariableGroupName '${{ parameters.variableGroupName }}'